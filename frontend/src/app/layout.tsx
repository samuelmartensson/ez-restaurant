import { getCustomerConfig } from "@/mock_db";
import type { Metadata } from "next";
import "./globals.css";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const themes = (font: string) =>
  ({
    rustic: {
      "--primary-50": "#fff4ec",
      "--primary-100": "#ffe7d3",
      "--primary-200": "#ffcaa5",
      "--primary-300": "#ffa56d",
      "--primary-400": "#ff7432",
      "--primary-500": "#ff4e0a",
      "--primary-600": "#ff3300",
      "--primary-700": "#cc2002",
      "--primary-800": "#a11b0b",
      "--primary-900": "#82190c",
      "--primary-950": "#460904",
      "--font-main": font,
    },
    modern: {
      "--primary-50": "#edf7ff",
      "--primary-100": "#d6ebff",
      "--primary-200": "#b5ddff",
      "--primary-300": "#83c9ff",
      "--primary-400": "#48aaff",
      "--primary-500": "#1e83ff",
      "--primary-600": "#0661ff",
      "--primary-700": "#004cfe",
      "--primary-800": "#083bc5",
      "--primary-900": "#0d379b",
      "--primary-950": "#0e235d",
      "--font-main": font,
    },
  } as Record<string, React.CSSProperties>);

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const data = await getCustomerConfig();
  const resolvedFont = data.font === "custom" ? "Poppins" : "Roboto";

  return (
    <html lang="en" style={themes(resolvedFont)[data.theme]}>
      {data.font === "custom" ? (
        // Load from custom CDN
        <style
          precedence="1"
          href="1"
        >{`@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');`}</style>
      ) : (
        // Load standard
        <style
          precedence="1"
          href="1"
        >{`@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');`}</style>
      )}
      <body className={`antialiased`}>{children}</body>
    </html>
  );
}
